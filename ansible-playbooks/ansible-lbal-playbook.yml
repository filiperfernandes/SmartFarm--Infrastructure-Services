# This Play install the required software in the Bastion/Load Balancer
- hosts: lbals
  become: yes
  become_method: sudo
  tasks:
    # as there is no internal DNS service, we need to populate theb /etc/hosts 
    - name: update /etc/hosts file for name resolution of self
      lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="127.0.0.1 {{item}}" state=present
      with_items: lbals 
    # as there is no internal DNS service, we need to populate theb /etc/hosts 
    - name: update /etc/hosts file for name resolution
      lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item]['ansible_default_ipv4'] }} {{item}}" state=present
      with_items: '{{groups.webs}}' 

    - name: install haproxy and socat
      apt: pkg={{ item }} state=latest
      with_items:
      - haproxy
      - socat

    - name: enable haproxy
      lineinfile: dest=/etc/default/haproxy regexp="^ENABLED" line="ENABLED=1"
      notify: restart haproxy 

    - name: deploy haproxy config
      template: src=templates/haproxy.cfg.j2 dest=/etc/haproxy/haproxy.cfg
      notify: restart haproxy

    # This task may be required for some updates due to packages installed
    - name: reboot machine
      shell: sleep 2 && shutdown -r now "Ansible reboot"
      async: 1
      poll: 0
      ignore_errors: true
    # Wait for the server to come alive again
    - name: wait for server to come back
      local_action: wait_for
      args:
        host: "{{ ansible_host }}"
        port: 22
        state: started
        delay: 30
        timeout: 300    

# The handler is common to the haproxy installation steps
  handlers:
    - name: restart haproxy
      service: name=haproxy state=restarted


