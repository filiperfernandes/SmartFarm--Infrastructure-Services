##
# Example Ansible playbook that uses the PostgreSQL module.
#
# This installs PostgreSQL on an Ubuntu system, creates a database called
# "smartfarm_db" and a user called "smartfarm" with password "password"
# with access to the "myapp" database.
#
---
- hosts: dbservers
  become: yes
  become_method: sudo
  gather_facts: no

  tasks:
  - name: ensure apt cache is up to date
    apt: update_cache=yes
  - name: ensure packages are installed
    apt: name={{item}}
    with_items:
        - postgresql
        - libpq-dev
        - python-psycopg2

- hosts: dbservers
  become: yes
  become_method: sudo
  become_user: postgres
  gather_facts: no

  vars:
    dbname: smartfarm_db
    dbuser: smartfarm
    dbpassword: password

  tasks:
  - name: ensure database is created
    postgresql_db: name={{dbname}}

  - name: ensure user has access to database
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

  - name: ensure user does not have unnecessary privilege
    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB
  
  - name: ensure no other user can access the database
    postgresql_privs: db={{dbname}} role=PUBLIC type=database priv=ALL state=absent

- hosts: dbservers
  become: yes
  become_method: sudo
  gather_facts: no

  tasks:
  - name: deploy postgresql config
    template: src=templates/postgresql.conf.j2 dest=/etc/postgresql/9.5/main/postgresql.conf
    notify: restart postgresql

  - name: deploy postgresql ipv6 config 
    template: src=templates/pg_hba.conf.j2 dest=/etc/postgresql/9.5/main/pg_hba.conf
    notify: restart postgresql

# Restart postgresql service
  handlers:

  - name: restart postgresql
    service: name=postgresql state=restarted